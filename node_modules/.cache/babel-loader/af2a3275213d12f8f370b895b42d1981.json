{"ast":null,"code":"import { RequestType, startFetchProxy, startXhrProxy } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { isAllowedRequestUrl } from './rumEventsCollection/resource/resourceUtils';\nimport { startTracer } from './tracing/tracer';\nvar nextRequestIndex = 1;\nexport function startRequestCollection(lifeCycle, configuration) {\n  var tracer = startTracer(configuration);\n  trackXhr(lifeCycle, configuration, tracer);\n  trackFetch(lifeCycle, configuration, tracer);\n}\nexport function trackXhr(lifeCycle, configuration, tracer) {\n  var xhrProxy = startXhrProxy();\n  xhrProxy.beforeSend(function (context, xhr) {\n    if (isAllowedRequestUrl(configuration, context.url)) {\n      tracer.traceXhr(context, xhr);\n      context.requestIndex = getNextRequestIndex();\n      lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n        requestIndex: context.requestIndex\n      });\n    }\n  });\n  xhrProxy.onRequestComplete(function (context) {\n    if (isAllowedRequestUrl(configuration, context.url)) {\n      tracer.clearTracingIfCancelled(context);\n      lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n        duration: context.duration,\n        method: context.method,\n        requestIndex: context.requestIndex,\n        responseText: context.responseText,\n        spanId: context.spanId,\n        startClocks: context.startClocks,\n        status: context.status,\n        traceId: context.traceId,\n        type: RequestType.XHR,\n        url: context.url,\n        xhr: context.xhr\n      });\n    }\n  });\n  return xhrProxy;\n}\nexport function trackFetch(lifeCycle, configuration, tracer) {\n  var fetchProxy = startFetchProxy();\n  fetchProxy.beforeSend(function (context) {\n    if (isAllowedRequestUrl(configuration, context.url)) {\n      tracer.traceFetch(context);\n      context.requestIndex = getNextRequestIndex();\n      lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n        requestIndex: context.requestIndex\n      });\n    }\n  });\n  fetchProxy.onRequestComplete(function (context) {\n    if (isAllowedRequestUrl(configuration, context.url)) {\n      tracer.clearTracingIfCancelled(context);\n      lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n        duration: context.duration,\n        method: context.method,\n        requestIndex: context.requestIndex,\n        responseText: context.responseText,\n        responseType: context.responseType,\n        spanId: context.spanId,\n        startClocks: context.startClocks,\n        status: context.status,\n        traceId: context.traceId,\n        type: RequestType.FETCH,\n        url: context.url,\n        response: context.response,\n        init: context.init,\n        input: context.input\n      });\n    }\n  });\n  return fetchProxy;\n}\n\nfunction getNextRequestIndex() {\n  var result = nextRequestIndex;\n  nextRequestIndex += 1;\n  return result;\n}","map":{"version":3,"sources":["../../src/domain/requestCollection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { RequestType, startFetchProxy, startXhrProxy, } from '@datadog/browser-core';\nimport { LifeCycleEventType } from './lifeCycle';\nimport { isAllowedRequestUrl } from './rumEventsCollection/resource/resourceUtils';\nimport { startTracer } from './tracing/tracer';\nvar nextRequestIndex = 1;\nexport function startRequestCollection(lifeCycle, configuration) {\n    var tracer = startTracer(configuration);\n    trackXhr(lifeCycle, configuration, tracer);\n    trackFetch(lifeCycle, configuration, tracer);\n}\nexport function trackXhr(lifeCycle, configuration, tracer) {\n    var xhrProxy = startXhrProxy();\n    xhrProxy.beforeSend(function (context, xhr) {\n        if (isAllowedRequestUrl(configuration, context.url)) {\n            tracer.traceXhr(context, xhr);\n            context.requestIndex = getNextRequestIndex();\n            lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n                requestIndex: context.requestIndex,\n            });\n        }\n    });\n    xhrProxy.onRequestComplete(function (context) {\n        if (isAllowedRequestUrl(configuration, context.url)) {\n            tracer.clearTracingIfCancelled(context);\n            lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n                duration: context.duration,\n                method: context.method,\n                requestIndex: context.requestIndex,\n                responseText: context.responseText,\n                spanId: context.spanId,\n                startClocks: context.startClocks,\n                status: context.status,\n                traceId: context.traceId,\n                type: RequestType.XHR,\n                url: context.url,\n                xhr: context.xhr,\n            });\n        }\n    });\n    return xhrProxy;\n}\nexport function trackFetch(lifeCycle, configuration, tracer) {\n    var fetchProxy = startFetchProxy();\n    fetchProxy.beforeSend(function (context) {\n        if (isAllowedRequestUrl(configuration, context.url)) {\n            tracer.traceFetch(context);\n            context.requestIndex = getNextRequestIndex();\n            lifeCycle.notify(LifeCycleEventType.REQUEST_STARTED, {\n                requestIndex: context.requestIndex,\n            });\n        }\n    });\n    fetchProxy.onRequestComplete(function (context) {\n        if (isAllowedRequestUrl(configuration, context.url)) {\n            tracer.clearTracingIfCancelled(context);\n            lifeCycle.notify(LifeCycleEventType.REQUEST_COMPLETED, {\n                duration: context.duration,\n                method: context.method,\n                requestIndex: context.requestIndex,\n                responseText: context.responseText,\n                responseType: context.responseType,\n                spanId: context.spanId,\n                startClocks: context.startClocks,\n                status: context.status,\n                traceId: context.traceId,\n                type: RequestType.FETCH,\n                url: context.url,\n                response: context.response,\n                init: context.init,\n                input: context.input,\n            });\n        }\n    });\n    return fetchProxy;\n}\nfunction getNextRequestIndex() {\n    var result = nextRequestIndex;\n    nextRequestIndex += 1;\n    return result;\n}\n//# sourceMappingURL=requestCollection.js.map"]},"metadata":{},"sourceType":"module"}