{"ast":null,"code":"var _a;\n\nimport { __assign, __decorate } from \"tslib\";\nimport { combine, createContextManager, ErrorSource, includes, monitored, display } from '@datadog/browser-core';\nexport var StatusType = {\n  debug: 'debug',\n  error: 'error',\n  info: 'info',\n  warn: 'warn'\n};\nvar STATUS_PRIORITIES = (_a = {}, _a[StatusType.debug] = 0, _a[StatusType.info] = 1, _a[StatusType.warn] = 2, _a[StatusType.error] = 3, _a);\nexport var STATUSES = Object.keys(StatusType);\nexport var HandlerType = {\n  console: 'console',\n  http: 'http',\n  silent: 'silent'\n};\n\nvar Logger =\n/** @class */\nfunction () {\n  function Logger(sendLog, handlerType, level, loggerContext) {\n    if (handlerType === void 0) {\n      handlerType = HandlerType.http;\n    }\n\n    if (level === void 0) {\n      level = StatusType.debug;\n    }\n\n    if (loggerContext === void 0) {\n      loggerContext = {};\n    }\n\n    this.sendLog = sendLog;\n    this.handlerType = handlerType;\n    this.level = level;\n    this.contextManager = createContextManager();\n    this.contextManager.set(loggerContext);\n  }\n\n  Logger.prototype.log = function (message, messageContext, status) {\n    if (status === void 0) {\n      status = StatusType.info;\n    }\n\n    if (STATUS_PRIORITIES[status] >= STATUS_PRIORITIES[this.level]) {\n      var handlers = Array.isArray(this.handlerType) ? this.handlerType : [this.handlerType];\n\n      if (includes(handlers, HandlerType.http)) {\n        this.sendLog(__assign({\n          message: message,\n          status: status\n        }, combine(this.contextManager.get(), messageContext)));\n      }\n\n      if (includes(handlers, HandlerType.console)) {\n        display.log(status + \": \" + message, combine(this.contextManager.get(), messageContext));\n      }\n    }\n  };\n\n  Logger.prototype.debug = function (message, messageContext) {\n    this.log(message, messageContext, StatusType.debug);\n  };\n\n  Logger.prototype.info = function (message, messageContext) {\n    this.log(message, messageContext, StatusType.info);\n  };\n\n  Logger.prototype.warn = function (message, messageContext) {\n    this.log(message, messageContext, StatusType.warn);\n  };\n\n  Logger.prototype.error = function (message, messageContext) {\n    var errorOrigin = {\n      error: {\n        origin: ErrorSource.LOGGER\n      }\n    };\n    this.log(message, combine(errorOrigin, messageContext), StatusType.error);\n  };\n\n  Logger.prototype.setContext = function (context) {\n    this.contextManager.set(context);\n  };\n\n  Logger.prototype.addContext = function (key, value) {\n    this.contextManager.add(key, value);\n  };\n\n  Logger.prototype.removeContext = function (key) {\n    this.contextManager.remove(key);\n  };\n\n  Logger.prototype.setHandler = function (handler) {\n    this.handlerType = handler;\n  };\n\n  Logger.prototype.setLevel = function (level) {\n    this.level = level;\n  };\n\n  __decorate([monitored], Logger.prototype, \"log\", null);\n\n  return Logger;\n}();\n\nexport { Logger };","map":{"version":3,"sources":["../../src/domain/logger.ts"],"names":[],"mappings":";;;AAAA,SACE,OADF,EAIE,oBAJF,EAKE,WALF,EAME,QANF,EAOE,SAPF,EAQE,OARF,QASO,uBATP;AAWA,OAAO,IAAM,UAAU,GAAG;AACxB,EAAA,KAAK,EAAE,OADiB;AAExB,EAAA,KAAK,EAAE,OAFiB;AAGxB,EAAA,IAAI,EAAE,MAHkB;AAIxB,EAAA,IAAI,EAAE;AAJkB,CAAnB;AASP,IAAM,iBAAiB,IAAA,EAAA,GAAA,EAAA,EACrB,EAAA,CAAC,UAAU,CAAC,KAAZ,CAAA,GAAoB,CADC,EAErB,EAAA,CAAC,UAAU,CAAC,IAAZ,CAAA,GAAmB,CAFE,EAGrB,EAAA,CAAC,UAAU,CAAC,IAAZ,CAAA,GAAmB,CAHE,EAIrB,EAAA,CAAC,UAAU,CAAC,KAAZ,CAAA,GAAoB,CAJC,EAKtB,EALsB,CAAvB;AAOA,OAAO,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAP,CAAY,UAAZ,CAAjB;AAQP,OAAO,IAAM,WAAW,GAAG;AACzB,EAAA,OAAO,EAAE,SADgB;AAEzB,EAAA,IAAI,EAAE,MAFmB;AAGzB,EAAA,MAAM,EAAE;AAHiB,CAApB;;AAQP,IAAA,MAAA;AAAA;AAAA,YAAA;AAGE,WAAA,MAAA,CACU,OADV,EAEU,WAFV,EAGU,KAHV,EAIE,aAJF,EAI6B;AAFnB,QAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,WAAA,GAA2C,WAAW,CAAC,IAAvD;AAA2D;;AAC3D,QAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,KAAA,GAAoB,UAAU,CAAC,KAA/B;AAAoC;;AAC5C,QAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,aAAA,GAAA,EAAA;AAA2B;;AAHnB,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,KAAA,GAAA,KAAA;AALF,SAAA,cAAA,GAAiB,oBAAoB,EAArC;AAQN,SAAK,cAAL,CAAoB,GAApB,CAAwB,aAAxB;AACD;;AAGD,EAAA,MAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,OAAJ,EAAqB,cAArB,EAA8C,MAA9C,EAAkF;AAApC,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAqB,UAAU,CAAC,IAAhC;AAAoC;;AAChF,QAAI,iBAAiB,CAAC,MAAD,CAAjB,IAA6B,iBAAiB,CAAC,KAAK,KAAN,CAAlD,EAAgE;AAC9D,UAAM,QAAQ,GAAG,KAAK,CAAC,OAAN,CAAc,KAAK,WAAnB,IAAkC,KAAK,WAAvC,GAAqD,CAAC,KAAK,WAAN,CAAtE;;AAEA,UAAI,QAAQ,CAAC,QAAD,EAAW,WAAW,CAAC,IAAvB,CAAZ,EAA0C;AACxC,aAAK,OAAL,CAAY,QAAA,CAAA;AAAG,UAAA,OAAO,EAAA,OAAV;AAAY,UAAA,MAAM,EAAA;AAAlB,SAAA,EAAuB,OAAO,CAAC,KAAK,cAAL,CAAoB,GAApB,EAAD,EAA4B,cAA5B,CAA9B,CAAZ;AACD;;AAED,UAAI,QAAQ,CAAC,QAAD,EAAW,WAAW,CAAC,OAAvB,CAAZ,EAA6C;AAC3C,QAAA,OAAO,CAAC,GAAR,CAAe,MAAM,GAAA,IAAN,GAAW,OAA1B,EAAqC,OAAO,CAAC,KAAK,cAAL,CAAoB,GAApB,EAAD,EAA4B,cAA5B,CAA5C;AACD;AACF;AACF,GAZD;;AAcA,EAAA,MAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,OAAN,EAAuB,cAAvB,EAA8C;AAC5C,SAAK,GAAL,CAAS,OAAT,EAAkB,cAAlB,EAAkC,UAAU,CAAC,KAA7C;AACD,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,OAAL,EAAsB,cAAtB,EAA6C;AAC3C,SAAK,GAAL,CAAS,OAAT,EAAkB,cAAlB,EAAkC,UAAU,CAAC,IAA7C;AACD,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,OAAL,EAAsB,cAAtB,EAA6C;AAC3C,SAAK,GAAL,CAAS,OAAT,EAAkB,cAAlB,EAAkC,UAAU,CAAC,IAA7C;AACD,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,OAAN,EAAuB,cAAvB,EAA8C;AAC5C,QAAM,WAAW,GAAG;AAClB,MAAA,KAAK,EAAE;AACL,QAAA,MAAM,EAAE,WAAW,CAAC;AADf;AADW,KAApB;AAKA,SAAK,GAAL,CAAS,OAAT,EAAkB,OAAO,CAAC,WAAD,EAAc,cAAd,CAAzB,EAAwD,UAAU,CAAC,KAAnE;AACD,GAPD;;AASA,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAA0B;AACxB,SAAK,cAAL,CAAoB,GAApB,CAAwB,OAAxB;AACD,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,GAAX,EAAwB,KAAxB,EAAkC;AAChC,SAAK,cAAL,CAAoB,GAApB,CAAwB,GAAxB,EAA6B,KAA7B;AACD,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,GAAd,EAAyB;AACvB,SAAK,cAAL,CAAoB,MAApB,CAA2B,GAA3B;AACD,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAA+C;AAC7C,SAAK,WAAL,GAAmB,OAAnB;AACD,GAFD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAA0B;AACxB,SAAK,KAAL,GAAa,KAAb;AACD,GAFD;;AAnDA,EAAA,UAAA,CAAA,CADC,SACD,CAAA,E,gBAAA,E,KAAA,EAYC,IAZD,CAAA;;AAsDF,SAAA,MAAA;AAAC,CAnED,EAAA;;SAAa,M","sourceRoot":"","sourcesContent":["var _a;\nimport { __assign, __decorate } from \"tslib\";\nimport { combine, createContextManager, ErrorSource, includes, monitored, display, } from '@datadog/browser-core';\nexport var StatusType = {\n    debug: 'debug',\n    error: 'error',\n    info: 'info',\n    warn: 'warn',\n};\nvar STATUS_PRIORITIES = (_a = {},\n    _a[StatusType.debug] = 0,\n    _a[StatusType.info] = 1,\n    _a[StatusType.warn] = 2,\n    _a[StatusType.error] = 3,\n    _a);\nexport var STATUSES = Object.keys(StatusType);\nexport var HandlerType = {\n    console: 'console',\n    http: 'http',\n    silent: 'silent',\n};\nvar Logger = /** @class */ (function () {\n    function Logger(sendLog, handlerType, level, loggerContext) {\n        if (handlerType === void 0) { handlerType = HandlerType.http; }\n        if (level === void 0) { level = StatusType.debug; }\n        if (loggerContext === void 0) { loggerContext = {}; }\n        this.sendLog = sendLog;\n        this.handlerType = handlerType;\n        this.level = level;\n        this.contextManager = createContextManager();\n        this.contextManager.set(loggerContext);\n    }\n    Logger.prototype.log = function (message, messageContext, status) {\n        if (status === void 0) { status = StatusType.info; }\n        if (STATUS_PRIORITIES[status] >= STATUS_PRIORITIES[this.level]) {\n            var handlers = Array.isArray(this.handlerType) ? this.handlerType : [this.handlerType];\n            if (includes(handlers, HandlerType.http)) {\n                this.sendLog(__assign({ message: message, status: status }, combine(this.contextManager.get(), messageContext)));\n            }\n            if (includes(handlers, HandlerType.console)) {\n                display.log(status + \": \" + message, combine(this.contextManager.get(), messageContext));\n            }\n        }\n    };\n    Logger.prototype.debug = function (message, messageContext) {\n        this.log(message, messageContext, StatusType.debug);\n    };\n    Logger.prototype.info = function (message, messageContext) {\n        this.log(message, messageContext, StatusType.info);\n    };\n    Logger.prototype.warn = function (message, messageContext) {\n        this.log(message, messageContext, StatusType.warn);\n    };\n    Logger.prototype.error = function (message, messageContext) {\n        var errorOrigin = {\n            error: {\n                origin: ErrorSource.LOGGER,\n            },\n        };\n        this.log(message, combine(errorOrigin, messageContext), StatusType.error);\n    };\n    Logger.prototype.setContext = function (context) {\n        this.contextManager.set(context);\n    };\n    Logger.prototype.addContext = function (key, value) {\n        this.contextManager.add(key, value);\n    };\n    Logger.prototype.removeContext = function (key) {\n        this.contextManager.remove(key);\n    };\n    Logger.prototype.setHandler = function (handler) {\n        this.handlerType = handler;\n    };\n    Logger.prototype.setLevel = function (level) {\n        this.level = level;\n    };\n    __decorate([\n        monitored\n    ], Logger.prototype, \"log\", null);\n    return Logger;\n}());\nexport { Logger };\n//# sourceMappingURL=logger.js.map"]},"metadata":{},"sourceType":"module"}