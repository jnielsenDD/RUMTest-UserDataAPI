{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { getCurrentSite } from '../browser/cookie';\nimport { catchUserErrors } from '../tools/catchUserErrors';\nimport { includes, ONE_KILO_BYTE, ONE_SECOND } from '../tools/utils';\nimport { computeTransportConfiguration } from './transportConfiguration';\nexport var DEFAULT_CONFIGURATION = {\n  allowedTracingOrigins: [],\n  maxErrorsByMinute: 3000,\n  maxInternalMonitoringMessagesPerPage: 15,\n  resourceSampleRate: 100,\n  sampleRate: 100,\n  silentMultipleInit: false,\n  trackInteractions: false,\n  trackViewsManually: false,\n\n  /**\n   * arbitrary value, byte precision not needed\n   */\n  requestErrorResponseLengthLimit: 32 * ONE_KILO_BYTE,\n\n  /**\n   * flush automatically, aim to be lower than ALB connection timeout\n   * to maximize connection reuse.\n   */\n  flushTimeout: 30 * ONE_SECOND,\n\n  /**\n   * Logs intake limit\n   */\n  maxBatchSize: 50,\n  maxMessageSize: 256 * ONE_KILO_BYTE,\n\n  /**\n   * beacon payload max queue size implementation is 64kb\n   * ensure that we leave room for logs, rum and potential other users\n   */\n  batchBytesLimit: 16 * ONE_KILO_BYTE\n};\nexport function buildConfiguration(userConfiguration, buildEnv) {\n  var enableExperimentalFeatures = Array.isArray(userConfiguration.enableExperimentalFeatures) ? userConfiguration.enableExperimentalFeatures : [];\n\n  var configuration = __assign(__assign({\n    beforeSend: userConfiguration.beforeSend && catchUserErrors(userConfiguration.beforeSend, 'beforeSend threw an error:'),\n    cookieOptions: buildCookieOptions(userConfiguration),\n    isEnabled: function isEnabled(feature) {\n      return includes(enableExperimentalFeatures, feature);\n    },\n    service: userConfiguration.service\n  }, computeTransportConfiguration(userConfiguration, buildEnv)), DEFAULT_CONFIGURATION);\n\n  if ('allowedTracingOrigins' in userConfiguration) {\n    configuration.allowedTracingOrigins = userConfiguration.allowedTracingOrigins;\n  }\n\n  if ('sampleRate' in userConfiguration) {\n    configuration.sampleRate = userConfiguration.sampleRate;\n  }\n\n  if ('resourceSampleRate' in userConfiguration) {\n    configuration.resourceSampleRate = userConfiguration.resourceSampleRate;\n  }\n\n  if ('trackInteractions' in userConfiguration) {\n    configuration.trackInteractions = !!userConfiguration.trackInteractions;\n  }\n\n  if ('trackViewsManually' in userConfiguration) {\n    configuration.trackViewsManually = !!userConfiguration.trackViewsManually;\n  }\n\n  return configuration;\n}\nexport function buildCookieOptions(userConfiguration) {\n  var cookieOptions = {};\n  cookieOptions.secure = mustUseSecureCookie(userConfiguration);\n  cookieOptions.crossSite = !!userConfiguration.useCrossSiteSessionCookie;\n\n  if (!!userConfiguration.trackSessionAcrossSubdomains) {\n    cookieOptions.domain = getCurrentSite();\n  }\n\n  return cookieOptions;\n}\n\nfunction mustUseSecureCookie(userConfiguration) {\n  return !!userConfiguration.useSecureSessionCookie || !!userConfiguration.useCrossSiteSessionCookie;\n}","map":{"version":3,"sources":["../../src/domain/configuration.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { getCurrentSite } from '../browser/cookie';\nimport { catchUserErrors } from '../tools/catchUserErrors';\nimport { includes, ONE_KILO_BYTE, ONE_SECOND } from '../tools/utils';\nimport { computeTransportConfiguration } from './transportConfiguration';\nexport var DEFAULT_CONFIGURATION = {\n    allowedTracingOrigins: [],\n    maxErrorsByMinute: 3000,\n    maxInternalMonitoringMessagesPerPage: 15,\n    resourceSampleRate: 100,\n    sampleRate: 100,\n    silentMultipleInit: false,\n    trackInteractions: false,\n    trackViewsManually: false,\n    /**\n     * arbitrary value, byte precision not needed\n     */\n    requestErrorResponseLengthLimit: 32 * ONE_KILO_BYTE,\n    /**\n     * flush automatically, aim to be lower than ALB connection timeout\n     * to maximize connection reuse.\n     */\n    flushTimeout: 30 * ONE_SECOND,\n    /**\n     * Logs intake limit\n     */\n    maxBatchSize: 50,\n    maxMessageSize: 256 * ONE_KILO_BYTE,\n    /**\n     * beacon payload max queue size implementation is 64kb\n     * ensure that we leave room for logs, rum and potential other users\n     */\n    batchBytesLimit: 16 * ONE_KILO_BYTE,\n};\nexport function buildConfiguration(userConfiguration, buildEnv) {\n    var enableExperimentalFeatures = Array.isArray(userConfiguration.enableExperimentalFeatures)\n        ? userConfiguration.enableExperimentalFeatures\n        : [];\n    var configuration = __assign(__assign({ beforeSend: userConfiguration.beforeSend && catchUserErrors(userConfiguration.beforeSend, 'beforeSend threw an error:'), cookieOptions: buildCookieOptions(userConfiguration), isEnabled: function (feature) { return includes(enableExperimentalFeatures, feature); }, service: userConfiguration.service }, computeTransportConfiguration(userConfiguration, buildEnv)), DEFAULT_CONFIGURATION);\n    if ('allowedTracingOrigins' in userConfiguration) {\n        configuration.allowedTracingOrigins = userConfiguration.allowedTracingOrigins;\n    }\n    if ('sampleRate' in userConfiguration) {\n        configuration.sampleRate = userConfiguration.sampleRate;\n    }\n    if ('resourceSampleRate' in userConfiguration) {\n        configuration.resourceSampleRate = userConfiguration.resourceSampleRate;\n    }\n    if ('trackInteractions' in userConfiguration) {\n        configuration.trackInteractions = !!userConfiguration.trackInteractions;\n    }\n    if ('trackViewsManually' in userConfiguration) {\n        configuration.trackViewsManually = !!userConfiguration.trackViewsManually;\n    }\n    return configuration;\n}\nexport function buildCookieOptions(userConfiguration) {\n    var cookieOptions = {};\n    cookieOptions.secure = mustUseSecureCookie(userConfiguration);\n    cookieOptions.crossSite = !!userConfiguration.useCrossSiteSessionCookie;\n    if (!!userConfiguration.trackSessionAcrossSubdomains) {\n        cookieOptions.domain = getCurrentSite();\n    }\n    return cookieOptions;\n}\nfunction mustUseSecureCookie(userConfiguration) {\n    return !!userConfiguration.useSecureSessionCookie || !!userConfiguration.useCrossSiteSessionCookie;\n}\n//# sourceMappingURL=configuration.js.map"]},"metadata":{},"sourceType":"module"}