{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { monitor, callMonitored } from '../domain/internalMonitoring';\nimport { computeStackTrace } from '../domain/tracekit';\nimport { toStackTraceString } from '../tools/error';\nimport { elapsed, clocksNow, timeStampNow } from '../tools/timeUtils';\nimport { normalizeUrl } from '../tools/urlPolyfill';\nvar fetchProxySingleton;\nvar originalFetch;\nvar beforeSendCallbacks = [];\nvar onRequestCompleteCallbacks = [];\nexport function startFetchProxy() {\n  if (!fetchProxySingleton) {\n    proxyFetch();\n    fetchProxySingleton = {\n      beforeSend: function beforeSend(callback) {\n        beforeSendCallbacks.push(callback);\n      },\n      onRequestComplete: function onRequestComplete(callback) {\n        onRequestCompleteCallbacks.push(callback);\n      }\n    };\n  }\n\n  return fetchProxySingleton;\n}\nexport function resetFetchProxy() {\n  if (fetchProxySingleton) {\n    fetchProxySingleton = undefined;\n    beforeSendCallbacks.splice(0, beforeSendCallbacks.length);\n    onRequestCompleteCallbacks.splice(0, onRequestCompleteCallbacks.length);\n    window.fetch = originalFetch;\n  }\n}\n\nfunction proxyFetch() {\n  if (!window.fetch) {\n    return;\n  }\n\n  originalFetch = window.fetch;\n\n  window.fetch = function (input, init) {\n    var responsePromise;\n    var context = callMonitored(beforeSend, null, [input, init]);\n\n    if (context) {\n      responsePromise = originalFetch.call(this, context.input, context.init);\n      callMonitored(afterSend, null, [responsePromise, context]);\n    } else {\n      responsePromise = originalFetch.call(this, input, init);\n    }\n\n    return responsePromise;\n  };\n}\n\nfunction beforeSend(input, init) {\n  var method = init && init.method || typeof input === 'object' && input.method || 'GET';\n  var url = normalizeUrl(typeof input === 'object' && input.url || input);\n  var startClocks = clocksNow();\n  var context = {\n    init: init,\n    input: input,\n    method: method,\n    startClocks: startClocks,\n    url: url\n  };\n  beforeSendCallbacks.forEach(function (callback) {\n    return callback(context);\n  });\n  return context;\n}\n\nfunction afterSend(responsePromise, context) {\n  var _this = this;\n\n  var reportFetch = function reportFetch(response) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var text, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            context.duration = elapsed(context.startClocks.timeStamp, timeStampNow());\n            if (!('stack' in response || response instanceof Error)) return [3\n            /*break*/\n            , 1];\n            context.status = 0;\n            context.responseText = toStackTraceString(computeStackTrace(response));\n            context.isAborted = response instanceof DOMException && response.code === DOMException.ABORT_ERR;\n            context.error = response;\n            onRequestCompleteCallbacks.forEach(function (callback) {\n              return callback(context);\n            });\n            return [3\n            /*break*/\n            , 6];\n\n          case 1:\n            if (!('status' in response)) return [3\n            /*break*/\n            , 6];\n            text = void 0;\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , response.clone().text()];\n\n          case 3:\n            text = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            e_1 = _a.sent();\n            text = \"Unable to retrieve response: \" + e_1;\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            context.response = response;\n            context.responseText = text;\n            context.responseType = response.type;\n            context.status = response.status;\n            context.isAborted = false;\n            onRequestCompleteCallbacks.forEach(function (callback) {\n              return callback(context);\n            });\n            _a.label = 6;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  responsePromise.then(monitor(reportFetch), monitor(reportFetch));\n}","map":{"version":3,"sources":["../../src/browser/fetchProxy.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,EAAkB,aAAlB,QAAuC,8BAAvC;AACA,SAAS,iBAAT,QAAkC,oBAAlC;AACA,SAAS,kBAAT,QAAmC,gBAAnC;AACA,SAAmB,OAAnB,EAAyC,SAAzC,EAAoD,YAApD,QAAwE,oBAAxE;AACA,SAAS,YAAT,QAA6B,sBAA7B;AAiCA,IAAI,mBAAJ;AACA,IAAI,aAAJ;AACA,IAAM,mBAAmB,GAA8C,EAAvE;AACA,IAAM,0BAA0B,GAAiD,EAAjF;AAEA,OAAM,SAAU,eAAV,GAAyB;AAI7B,MAAI,CAAC,mBAAL,EAA0B;AACxB,IAAA,UAAU;AACV,IAAA,mBAAmB,GAAG;AACpB,MAAA,UAAU,EAAV,oBAAW,QAAX,EAAyD;AACvD,QAAA,mBAAmB,CAAC,IAApB,CAAyB,QAAzB;AACD,OAHmB;AAIpB,MAAA,iBAAiB,EAAjB,2BAAkB,QAAlB,EAAmE;AACjE,QAAA,0BAA0B,CAAC,IAA3B,CAAgC,QAAhC;AACD;AANmB,KAAtB;AAQD;;AACD,SAAO,mBAAP;AACD;AAED,OAAM,SAAU,eAAV,GAAyB;AAC7B,MAAI,mBAAJ,EAAyB;AACvB,IAAA,mBAAmB,GAAG,SAAtB;AACA,IAAA,mBAAmB,CAAC,MAApB,CAA2B,CAA3B,EAA8B,mBAAmB,CAAC,MAAlD;AACA,IAAA,0BAA0B,CAAC,MAA3B,CAAkC,CAAlC,EAAqC,0BAA0B,CAAC,MAAhE;AACA,IAAA,MAAM,CAAC,KAAP,GAAe,aAAf;AACD;AACF;;AAED,SAAS,UAAT,GAAmB;AACjB,MAAI,CAAC,MAAM,CAAC,KAAZ,EAAmB;AACjB;AACD;;AAED,EAAA,aAAa,GAAG,MAAM,CAAC,KAAvB;;AAEA,EAAA,MAAM,CAAC,KAAP,GAAe,UAAoD,KAApD,EAAwE,IAAxE,EAA0F;AACvG,QAAI,eAAJ;AAEA,QAAM,OAAO,GAAG,aAAa,CAAC,UAAD,EAAa,IAAb,EAAmB,CAAC,KAAD,EAAQ,IAAR,CAAnB,CAA7B;;AACA,QAAI,OAAJ,EAAa;AACX,MAAA,eAAe,GAAG,aAAa,CAAC,IAAd,CAAmB,IAAnB,EAAyB,OAAO,CAAC,KAAjC,EAAwC,OAAO,CAAC,IAAhD,CAAlB;AACA,MAAA,aAAa,CAAC,SAAD,EAAY,IAAZ,EAAkB,CAAC,eAAD,EAAkB,OAAlB,CAAlB,CAAb;AACD,KAHD,MAGO;AACL,MAAA,eAAe,GAAG,aAAa,CAAC,IAAd,CAAmB,IAAnB,EAAyB,KAAzB,EAAgC,IAAhC,CAAlB;AACD;;AAED,WAAO,eAAP;AACD,GAZD;AAaD;;AAED,SAAS,UAAT,CAAoB,KAApB,EAAwC,IAAxC,EAA0D;AACxD,MAAM,MAAM,GAAI,IAAI,IAAI,IAAI,CAAC,MAAd,IAA0B,OAAO,KAAP,KAAiB,QAAjB,IAA6B,KAAK,CAAC,MAA7D,IAAwE,KAAvF;AACA,MAAM,GAAG,GAAG,YAAY,CAAE,OAAO,KAAP,KAAiB,QAAjB,IAA6B,KAAK,CAAC,GAApC,IAA6C,KAA9C,CAAxB;AACA,MAAM,WAAW,GAAG,SAAS,EAA7B;AAEA,MAAM,OAAO,GAAsB;AACjC,IAAA,IAAI,EAAA,IAD6B;AAEjC,IAAA,KAAK,EAAA,KAF4B;AAGjC,IAAA,MAAM,EAAA,MAH2B;AAIjC,IAAA,WAAW,EAAA,WAJsB;AAKjC,IAAA,GAAG,EAAA;AAL8B,GAAnC;AAQA,EAAA,mBAAmB,CAAC,OAApB,CAA4B,UAAC,QAAD,EAAS;AAAK,WAAA,QAAQ,CAAR,OAAQ,CAAR;AAAiB,GAA3D;AAEA,SAAO,OAAP;AACD;;AAED,SAAS,SAAT,CAAmB,eAAnB,EAAuD,OAAvD,EAAiH;AAAjH,MAAA,KAAA,GAAA,IAAA;;AACE,MAAM,WAAW,GAAG,SAAd,WAAc,CAAO,QAAP,EAAiC;AAAA,WAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AACnD,YAAA,OAAO,CAAC,QAAR,GAAmB,OAAO,CAAC,OAAO,CAAC,WAAR,CAAoB,SAArB,EAAgC,YAAY,EAA5C,CAA1B;gBAEI,EAAA,WAAW,QAAX,IAAuB,QAAQ,YAAY,KAA3C,C,EAAA,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AACF,YAAA,OAAO,CAAC,MAAR,GAAiB,CAAjB;AACA,YAAA,OAAO,CAAC,YAAR,GAAuB,kBAAkB,CAAC,iBAAiB,CAAC,QAAD,CAAlB,CAAzC;AACA,YAAA,OAAO,CAAC,SAAR,GAAoB,QAAQ,YAAY,YAApB,IAAoC,QAAQ,CAAC,IAAT,KAAkB,YAAY,CAAC,SAAvF;AACA,YAAA,OAAO,CAAC,KAAR,GAAgB,QAAhB;AAEA,YAAA,0BAA0B,CAAC,OAA3B,CAAmC,UAAC,QAAD,EAAS;AAAK,qBAAA,QAAQ,CAAR,OAAQ,CAAR;AAAyC,aAA1F;;;;;;gBACS,EAAA,YAAY,QAAZ,C,EAAA,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AACL,YAAA,IAAI,GAAA,KAAA,CAAJ;;;;;;AAEK,mBAAA,CAAA;AAAA;AAAA,cAAM,QAAQ,CAAC,KAAT,GAAiB,IAAjB,EAAN,CAAA;;;AAAP,YAAA,IAAI,GAAG,EAAA,CAAA,IAAA,EAAP;;;;;;;AAEA,YAAA,IAAI,GAAG,kCAAgC,GAAvC;;;;;;AAEF,YAAA,OAAO,CAAC,QAAR,GAAmB,QAAnB;AACA,YAAA,OAAO,CAAC,YAAR,GAAuB,IAAvB;AACA,YAAA,OAAO,CAAC,YAAR,GAAuB,QAAQ,CAAC,IAAhC;AACA,YAAA,OAAO,CAAC,MAAR,GAAiB,QAAQ,CAAC,MAA1B;AACA,YAAA,OAAO,CAAC,SAAR,GAAoB,KAApB;AAEA,YAAA,0BAA0B,CAAC,OAA3B,CAAmC,UAAC,QAAD,EAAS;AAAK,qBAAA,QAAQ,CAAR,OAAQ,CAAR;AAAyC,aAA1F;;;;;;;;;KAvBiD,CAAA;AAyBpD,GAzBD;;AA0BA,EAAA,eAAe,CAAC,IAAhB,CAAqB,OAAO,CAAC,WAAD,CAA5B,EAA2C,OAAO,CAAC,WAAD,CAAlD;AACD","sourceRoot":"","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { monitor, callMonitored } from '../domain/internalMonitoring';\nimport { computeStackTrace } from '../domain/tracekit';\nimport { toStackTraceString } from '../tools/error';\nimport { elapsed, clocksNow, timeStampNow } from '../tools/timeUtils';\nimport { normalizeUrl } from '../tools/urlPolyfill';\nvar fetchProxySingleton;\nvar originalFetch;\nvar beforeSendCallbacks = [];\nvar onRequestCompleteCallbacks = [];\nexport function startFetchProxy() {\n    if (!fetchProxySingleton) {\n        proxyFetch();\n        fetchProxySingleton = {\n            beforeSend: function (callback) {\n                beforeSendCallbacks.push(callback);\n            },\n            onRequestComplete: function (callback) {\n                onRequestCompleteCallbacks.push(callback);\n            },\n        };\n    }\n    return fetchProxySingleton;\n}\nexport function resetFetchProxy() {\n    if (fetchProxySingleton) {\n        fetchProxySingleton = undefined;\n        beforeSendCallbacks.splice(0, beforeSendCallbacks.length);\n        onRequestCompleteCallbacks.splice(0, onRequestCompleteCallbacks.length);\n        window.fetch = originalFetch;\n    }\n}\nfunction proxyFetch() {\n    if (!window.fetch) {\n        return;\n    }\n    originalFetch = window.fetch;\n    window.fetch = function (input, init) {\n        var responsePromise;\n        var context = callMonitored(beforeSend, null, [input, init]);\n        if (context) {\n            responsePromise = originalFetch.call(this, context.input, context.init);\n            callMonitored(afterSend, null, [responsePromise, context]);\n        }\n        else {\n            responsePromise = originalFetch.call(this, input, init);\n        }\n        return responsePromise;\n    };\n}\nfunction beforeSend(input, init) {\n    var method = (init && init.method) || (typeof input === 'object' && input.method) || 'GET';\n    var url = normalizeUrl((typeof input === 'object' && input.url) || input);\n    var startClocks = clocksNow();\n    var context = {\n        init: init,\n        input: input,\n        method: method,\n        startClocks: startClocks,\n        url: url,\n    };\n    beforeSendCallbacks.forEach(function (callback) { return callback(context); });\n    return context;\n}\nfunction afterSend(responsePromise, context) {\n    var _this = this;\n    var reportFetch = function (response) { return __awaiter(_this, void 0, void 0, function () {\n        var text, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    context.duration = elapsed(context.startClocks.timeStamp, timeStampNow());\n                    if (!('stack' in response || response instanceof Error)) return [3 /*break*/, 1];\n                    context.status = 0;\n                    context.responseText = toStackTraceString(computeStackTrace(response));\n                    context.isAborted = response instanceof DOMException && response.code === DOMException.ABORT_ERR;\n                    context.error = response;\n                    onRequestCompleteCallbacks.forEach(function (callback) { return callback(context); });\n                    return [3 /*break*/, 6];\n                case 1:\n                    if (!('status' in response)) return [3 /*break*/, 6];\n                    text = void 0;\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 4, , 5]);\n                    return [4 /*yield*/, response.clone().text()];\n                case 3:\n                    text = _a.sent();\n                    return [3 /*break*/, 5];\n                case 4:\n                    e_1 = _a.sent();\n                    text = \"Unable to retrieve response: \" + e_1;\n                    return [3 /*break*/, 5];\n                case 5:\n                    context.response = response;\n                    context.responseText = text;\n                    context.responseType = response.type;\n                    context.status = response.status;\n                    context.isAborted = false;\n                    onRequestCompleteCallbacks.forEach(function (callback) { return callback(context); });\n                    _a.label = 6;\n                case 6: return [2 /*return*/];\n            }\n        });\n    }); };\n    responsePromise.then(monitor(reportFetch), monitor(reportFetch));\n}\n//# sourceMappingURL=fetchProxy.js.map"]},"metadata":{},"sourceType":"module"}