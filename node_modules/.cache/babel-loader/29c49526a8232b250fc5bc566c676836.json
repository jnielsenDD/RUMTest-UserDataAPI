{"ast":null,"code":"import { areCookiesAuthorized, Batch, combine, commonInit, createErrorFilter, HttpRequest, limitModification, Observable, startAutomaticErrorCollection } from '@datadog/browser-core';\nimport { StatusType } from '../domain/logger';\nimport { startLoggerSession } from '../domain/loggerSession';\nimport { buildEnv } from './buildEnv';\nvar FIELDS_WITH_SENSITIVE_DATA = ['view.url', 'view.referrer', 'message', 'error.stack', 'http.url'];\nexport function startLogs(userConfiguration, errorLogger, getGlobalContext) {\n  var _a = commonInit(userConfiguration, buildEnv),\n      configuration = _a.configuration,\n      internalMonitoring = _a.internalMonitoring;\n\n  var errorObservable = userConfiguration.forwardErrorsToLogs !== false ? startAutomaticErrorCollection(configuration) : new Observable();\n  var session = startLoggerSession(configuration, areCookiesAuthorized(configuration.cookieOptions));\n  return doStartLogs(configuration, errorObservable, internalMonitoring, session, errorLogger, getGlobalContext);\n}\nexport function doStartLogs(configuration, errorObservable, internalMonitoring, session, errorLogger, getGlobalContext) {\n  internalMonitoring.setExternalContextProvider(function () {\n    return combine({\n      session_id: session.getId()\n    }, getGlobalContext(), getRUMInternalContext());\n  });\n  var assemble = buildAssemble(session, configuration, reportError);\n  var batch = startLoggerBatch(configuration);\n\n  function reportError(error) {\n    errorLogger.error(error.message, combine({\n      date: error.startClocks.timeStamp,\n      error: {\n        kind: error.type,\n        origin: error.source,\n        stack: error.stack\n      }\n    }, error.resource ? {\n      http: {\n        method: error.resource.method,\n        status_code: error.resource.statusCode,\n        url: error.resource.url\n      }\n    } : undefined, getRUMInternalContext(error.startClocks.relative)));\n  }\n\n  errorObservable.subscribe(reportError);\n  return function (message, currentContext) {\n    var contextualizedMessage = assemble(message, currentContext);\n\n    if (contextualizedMessage) {\n      batch.add(contextualizedMessage);\n    }\n  };\n}\n\nfunction startLoggerBatch(configuration) {\n  var primaryBatch = createLoggerBatch(configuration.logsEndpoint);\n  var replicaBatch;\n\n  if (configuration.replica !== undefined) {\n    replicaBatch = createLoggerBatch(configuration.replica.logsEndpoint);\n  }\n\n  function createLoggerBatch(endpointUrl) {\n    return new Batch(new HttpRequest(endpointUrl, configuration.batchBytesLimit), configuration.maxBatchSize, configuration.batchBytesLimit, configuration.maxMessageSize, configuration.flushTimeout);\n  }\n\n  return {\n    add: function add(message) {\n      primaryBatch.add(message);\n\n      if (replicaBatch) {\n        replicaBatch.add(message);\n      }\n    }\n  };\n}\n\nexport function buildAssemble(session, configuration, reportError) {\n  var errorFilter = createErrorFilter(configuration, reportError);\n  return function (message, currentContext) {\n    if (!session.isTracked()) {\n      return undefined;\n    }\n\n    var contextualizedMessage = combine({\n      service: configuration.service,\n      session_id: session.getId()\n    }, currentContext, getRUMInternalContext(), message);\n\n    if (configuration.beforeSend) {\n      var shouldSend = limitModification(contextualizedMessage, FIELDS_WITH_SENSITIVE_DATA, configuration.beforeSend);\n\n      if (shouldSend === false) {\n        return undefined;\n      }\n    }\n\n    if (contextualizedMessage.status === StatusType.error && errorFilter.isLimitReached()) {\n      return undefined;\n    }\n\n    return contextualizedMessage;\n  };\n}\n\nfunction getRUMInternalContext(startTime) {\n  var rum = window.DD_RUM;\n  return rum && rum.getInternalContext ? rum.getInternalContext(startTime) : undefined;\n}","map":{"version":3,"sources":["../../src/boot/startLogs.ts"],"names":[],"mappings":"AAAA,SACE,oBADF,EAEE,KAFF,EAGE,OAHF,EAIE,UAJF,EAOE,iBAPF,EASE,WATF,EAWE,iBAXF,EAYE,UAZF,EAeE,6BAfF,QAiBO,uBAjBP;AAkBA,SAA8B,UAA9B,QAAgD,kBAAhD;AACA,SAAwB,kBAAxB,QAAkD,yBAAlD;AAEA,SAAS,QAAT,QAAyB,YAAzB;AAOA,IAAM,0BAA0B,GAAG,CAAC,UAAD,EAAa,eAAb,EAA8B,SAA9B,EAAyC,aAAzC,EAAwD,UAAxD,CAAnC;AAEA,OAAM,SAAU,SAAV,CACJ,iBADI,EAEJ,WAFI,EAGJ,gBAHI,EAG2B;AAEzB,MAAA,EAAA,GAAwC,UAAU,CAAC,iBAAD,EAAoB,QAApB,CAAlD;AAAA,MAAE,aAAa,GAAA,EAAA,CAAA,aAAf;AAAA,MAAiB,kBAAkB,GAAA,EAAA,CAAA,kBAAnC;;AACN,MAAM,eAAe,GACnB,iBAAiB,CAAC,mBAAlB,KAA0C,KAA1C,GACI,6BAA6B,CAAC,aAAD,CADjC,GAEI,IAAI,UAAJ,EAHN;AAIA,MAAM,OAAO,GAAG,kBAAkB,CAAC,aAAD,EAAgB,oBAAoB,CAAC,aAAa,CAAC,aAAf,CAApC,CAAlC;AACA,SAAO,WAAW,CAAC,aAAD,EAAgB,eAAhB,EAAiC,kBAAjC,EAAqD,OAArD,EAA8D,WAA9D,EAA2E,gBAA3E,CAAlB;AACD;AAED,OAAM,SAAU,WAAV,CACJ,aADI,EAEJ,eAFI,EAGJ,kBAHI,EAIJ,OAJI,EAKJ,WALI,EAMJ,gBANI,EAM2B;AAE/B,EAAA,kBAAkB,CAAC,0BAAnB,CAA8C,YAAA;AAC5C,WAAA,OAAO,CAAC;AAAE,MAAA,UAAU,EAAE,OAAO,CAAC,KAAR;AAAd,KAAD,EAAkC,gBAAgB,EAAlD,EAAsD,qBAAqB,EAA3E,CAAP;AAAqF,GADvF;AAIA,MAAM,QAAQ,GAAG,aAAa,CAAC,OAAD,EAAU,aAAV,EAAyB,WAAzB,CAA9B;AACA,MAAM,KAAK,GAAG,gBAAgB,CAAC,aAAD,CAA9B;;AAEA,WAAS,WAAT,CAAqB,KAArB,EAAoC;AAClC,IAAA,WAAW,CAAC,KAAZ,CACE,KAAK,CAAC,OADR,EAEE,OAAO,CACL;AACE,MAAA,IAAI,EAAE,KAAK,CAAC,WAAN,CAAkB,SAD1B;AAEE,MAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE,KAAK,CAAC,IADP;AAEL,QAAA,MAAM,EAAE,KAAK,CAAC,MAFT;AAGL,QAAA,KAAK,EAAE,KAAK,CAAC;AAHR;AAFT,KADK,EASL,KAAK,CAAC,QAAN,GACI;AACE,MAAA,IAAI,EAAE;AACJ,QAAA,MAAM,EAAE,KAAK,CAAC,QAAN,CAAe,MADnB;AAEJ,QAAA,WAAW,EAAE,KAAK,CAAC,QAAN,CAAe,UAFxB;AAGJ,QAAA,GAAG,EAAE,KAAK,CAAC,QAAN,CAAe;AAHhB;AADR,KADJ,GAQI,SAjBC,EAkBL,qBAAqB,CAAC,KAAK,CAAC,WAAN,CAAkB,QAAnB,CAlBhB,CAFT;AAuBD;;AACD,EAAA,eAAe,CAAC,SAAhB,CAA0B,WAA1B;AAEA,SAAO,UAAC,OAAD,EAAuB,cAAvB,EAA8C;AACnD,QAAM,qBAAqB,GAAG,QAAQ,CAAC,OAAD,EAAU,cAAV,CAAtC;;AACA,QAAI,qBAAJ,EAA2B;AACzB,MAAA,KAAK,CAAC,GAAN,CAAU,qBAAV;AACD;AACF,GALD;AAMD;;AAED,SAAS,gBAAT,CAA0B,aAA1B,EAAsD;AACpD,MAAM,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,YAAf,CAAtC;AAEA,MAAI,YAAJ;;AACA,MAAI,aAAa,CAAC,OAAd,KAA0B,SAA9B,EAAyC;AACvC,IAAA,YAAY,GAAG,iBAAiB,CAAC,aAAa,CAAC,OAAd,CAAsB,YAAvB,CAAhC;AACD;;AAED,WAAS,iBAAT,CAA2B,WAA3B,EAA8C;AAC5C,WAAO,IAAI,KAAJ,CACL,IAAI,WAAJ,CAAgB,WAAhB,EAA6B,aAAa,CAAC,eAA3C,CADK,EAEL,aAAa,CAAC,YAFT,EAGL,aAAa,CAAC,eAHT,EAIL,aAAa,CAAC,cAJT,EAKL,aAAa,CAAC,YALT,CAAP;AAOD;;AAED,SAAO;AACL,IAAA,GAAG,EAAH,aAAI,OAAJ,EAAoB;AAClB,MAAA,YAAY,CAAC,GAAb,CAAiB,OAAjB;;AACA,UAAI,YAAJ,EAAkB;AAChB,QAAA,YAAY,CAAC,GAAb,CAAiB,OAAjB;AACD;AACF;AANI,GAAP;AAQD;;AAED,OAAM,SAAU,aAAV,CACJ,OADI,EAEJ,aAFI,EAGJ,WAHI,EAGkC;AAEtC,MAAM,WAAW,GAAG,iBAAiB,CAAC,aAAD,EAAgB,WAAhB,CAArC;AACA,SAAO,UAAC,OAAD,EAAuB,cAAvB,EAA8C;AACnD,QAAI,CAAC,OAAO,CAAC,SAAR,EAAL,EAA0B;AACxB,aAAO,SAAP;AACD;;AACD,QAAM,qBAAqB,GAAG,OAAO,CACnC;AAAE,MAAA,OAAO,EAAE,aAAa,CAAC,OAAzB;AAAkC,MAAA,UAAU,EAAE,OAAO,CAAC,KAAR;AAA9C,KADmC,EAEnC,cAFmC,EAGnC,qBAAqB,EAHc,EAInC,OAJmC,CAArC;;AAMA,QAAI,aAAa,CAAC,UAAlB,EAA8B;AAC5B,UAAM,UAAU,GAAG,iBAAiB,CAClC,qBADkC,EAElC,0BAFkC,EAGlC,aAAa,CAAC,UAHoB,CAApC;;AAKA,UAAI,UAAU,KAAK,KAAnB,EAA0B;AACxB,eAAO,SAAP;AACD;AACF;;AACD,QAAI,qBAAqB,CAAC,MAAtB,KAAiC,UAAU,CAAC,KAA5C,IAAqD,WAAW,CAAC,cAAZ,EAAzD,EAAuF;AACrF,aAAO,SAAP;AACD;;AACD,WAAO,qBAAP;AACD,GAxBD;AAyBD;;AAMD,SAAS,qBAAT,CAA+B,SAA/B,EAAuD;AACrD,MAAM,GAAG,GAAI,MAAc,CAAC,MAA5B;AACA,SAAO,GAAG,IAAI,GAAG,CAAC,kBAAX,GAAgC,GAAG,CAAC,kBAAJ,CAAuB,SAAvB,CAAhC,GAAoE,SAA3E;AACD","sourceRoot":"","sourcesContent":["import { areCookiesAuthorized, Batch, combine, commonInit, createErrorFilter, HttpRequest, limitModification, Observable, startAutomaticErrorCollection, } from '@datadog/browser-core';\nimport { StatusType } from '../domain/logger';\nimport { startLoggerSession } from '../domain/loggerSession';\nimport { buildEnv } from './buildEnv';\nvar FIELDS_WITH_SENSITIVE_DATA = ['view.url', 'view.referrer', 'message', 'error.stack', 'http.url'];\nexport function startLogs(userConfiguration, errorLogger, getGlobalContext) {\n    var _a = commonInit(userConfiguration, buildEnv), configuration = _a.configuration, internalMonitoring = _a.internalMonitoring;\n    var errorObservable = userConfiguration.forwardErrorsToLogs !== false\n        ? startAutomaticErrorCollection(configuration)\n        : new Observable();\n    var session = startLoggerSession(configuration, areCookiesAuthorized(configuration.cookieOptions));\n    return doStartLogs(configuration, errorObservable, internalMonitoring, session, errorLogger, getGlobalContext);\n}\nexport function doStartLogs(configuration, errorObservable, internalMonitoring, session, errorLogger, getGlobalContext) {\n    internalMonitoring.setExternalContextProvider(function () {\n        return combine({ session_id: session.getId() }, getGlobalContext(), getRUMInternalContext());\n    });\n    var assemble = buildAssemble(session, configuration, reportError);\n    var batch = startLoggerBatch(configuration);\n    function reportError(error) {\n        errorLogger.error(error.message, combine({\n            date: error.startClocks.timeStamp,\n            error: {\n                kind: error.type,\n                origin: error.source,\n                stack: error.stack,\n            },\n        }, error.resource\n            ? {\n                http: {\n                    method: error.resource.method,\n                    status_code: error.resource.statusCode,\n                    url: error.resource.url,\n                },\n            }\n            : undefined, getRUMInternalContext(error.startClocks.relative)));\n    }\n    errorObservable.subscribe(reportError);\n    return function (message, currentContext) {\n        var contextualizedMessage = assemble(message, currentContext);\n        if (contextualizedMessage) {\n            batch.add(contextualizedMessage);\n        }\n    };\n}\nfunction startLoggerBatch(configuration) {\n    var primaryBatch = createLoggerBatch(configuration.logsEndpoint);\n    var replicaBatch;\n    if (configuration.replica !== undefined) {\n        replicaBatch = createLoggerBatch(configuration.replica.logsEndpoint);\n    }\n    function createLoggerBatch(endpointUrl) {\n        return new Batch(new HttpRequest(endpointUrl, configuration.batchBytesLimit), configuration.maxBatchSize, configuration.batchBytesLimit, configuration.maxMessageSize, configuration.flushTimeout);\n    }\n    return {\n        add: function (message) {\n            primaryBatch.add(message);\n            if (replicaBatch) {\n                replicaBatch.add(message);\n            }\n        },\n    };\n}\nexport function buildAssemble(session, configuration, reportError) {\n    var errorFilter = createErrorFilter(configuration, reportError);\n    return function (message, currentContext) {\n        if (!session.isTracked()) {\n            return undefined;\n        }\n        var contextualizedMessage = combine({ service: configuration.service, session_id: session.getId() }, currentContext, getRUMInternalContext(), message);\n        if (configuration.beforeSend) {\n            var shouldSend = limitModification(contextualizedMessage, FIELDS_WITH_SENSITIVE_DATA, configuration.beforeSend);\n            if (shouldSend === false) {\n                return undefined;\n            }\n        }\n        if (contextualizedMessage.status === StatusType.error && errorFilter.isLimitReached()) {\n            return undefined;\n        }\n        return contextualizedMessage;\n    };\n}\nfunction getRUMInternalContext(startTime) {\n    var rum = window.DD_RUM;\n    return rum && rum.getInternalContext ? rum.getInternalContext(startTime) : undefined;\n}\n//# sourceMappingURL=startLogs.js.map"]},"metadata":{},"sourceType":"module"}